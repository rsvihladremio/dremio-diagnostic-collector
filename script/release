#!/bin/sh

# script/release: build binaries in all supported platforms and upload them with the gh client

set -e

cd "$(dirname "$0")/.."

# this is also set in script/build and is a copy paste
GIT_SHA=`git rev-parse --short HEAD`
VERSION=$1
LDFLAGS="-X github.com/rsvihladremio/dremio-diagnostic-collector/cmd.GitSha=$GIT_SHA -X github.com/rsvihladremio/dremio-diagnostic-collector/cmd/versions.Version=$VERSION"

echo "Cleaning bin folder…"
date "+%H:%M:%S"
./script/clean


echo "Building linux-amd64…"
date "+%H:%M:%S"
GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o ./bin/ddc
cp ./default-ddc.yaml ./bin/ddc.yaml
zip ./bin/ddc-linux-amd64.zip ./bin/ddc ./bin/ddc.yaml
mkdir -p ./bin/linux
mv ./bin/ddc ./bin/linux/ddc
mv ./bin/ddc.yaml ./bin/ddc.yaml
echo "Building linux-arm64…"
date "+%H:%M:%S"
GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o ./bin/ddc
zip ./bin/ddc-linux-arm64.zip ./bin/ddc ./bin/linux/ddc ./bin/ddc.yaml
echo "Building darwin-os-x-amd64…"
date "+%H:%M:%S"
GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o ./bin/ddc
zip ./bin/ddc-darwin-amd64.zip ./bin/ddc ./bin/linux/ddc ./bin/ddc.yaml
echo "Building darwin-os-x-arm64…"
date "+%H:%M:%S"
GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o ./bin/ddc
zip ./bin/ddc-darwin-arm64.zip ./bin/ddc ./bin/linux/ddc ./bin/ddc.yaml
echo "Building windows-amd64…"
date "+%H:%M:%S"
GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o ./bin/ddc.exe
zip ./bin/ddc-windows-amd64.zip ./bin/ddc.exe ./bin/linux/ddc ./bin/ddc.yaml


gh release create $VERSION --title $VERSION -F changelog.md ./bin/ddc-windows-amd64.zip ./bin/ddc-darwin-arm64.zip ./bin/ddc-darwin-amd64.zip ./bin/ddc-linux-arm64.zip ./bin/ddc-linux-amd64.zip 
 
